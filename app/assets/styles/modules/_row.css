.row {

  @mixin clearfix;

  &--t-padding {
    padding-top: 80px;
  }

  &--gutters {
    margin-right: -65px;
  }

  &--gutters-small{
    margin-right: -45px;
  }

  &--gutters-large{
    margin-right: -100px;
  }

  &--gutters > div {
    padding-right: 65px;
  }

  &--gutters-small > div {
    padding-right: 45px;
  }

  &--gutters-large > div {
    padding-right: 100px;
  }
    /* > div  ..  Select all the 'children' that use a tag of div */

  &__b-margin-until-medium {
    margin-bottom: 1rem;
  }

  @mixin atMedium {

    &__b-margin-until-medium {
      margin-bottom: 0;
    }

    &__medium-4 {
      float: left;
      width: 33.33%;
    }

    &__medium-4--larger {
      width: 37%;
    }

    &__medium-6 {
      float: left;
      width: 50%;
    }

    &__medium-8 {
      float: left;
      width: 66.66%;
    }

    &__medium-8--smaller {
      width: 63%;
    }
    /* If the rows available width as 100%, then divide it up among our 12 column grid 
        then 100/12, 8.333, that each each column grid is 8.33% wide

       Cannot let the combined width of the columns & padding be more than 100%, otherwise it will break onto two lines 
        unless you use    box-sizing: border-box;  (see _global.css) */        
  }

  @mixin atLarge {

    &__b-margin-until-large {
      margin-bottom: 0;
    }

    &__large-4 {
      float: left;
      width: 33.33%;
    }

    &__large-4--larger {
      width: 37%;
    }

    &__large-6 {
      float: left;
      width: 50%;
    }

    &__large-8 {
      float: left;
      width: 66.66%;
    }

    &__large-8--smaller {
      width: 63%;
    }
    /* If the rows available width as 100%, then divide it up among our 12 column grid 
        then 100/12, 8.333, that each each column grid is 8.33% wide

       Cannot let the combined width of the columns & padding be more than 100%, otherwise it will break onto two lines 
        unless you use    box-sizing: border-box;  (see _global.css) */        
  }

  /* Begin Equal Height Rules */
  .flexbox &--equal-height-at-medium {
    @mixin atMedium {
      display: flex;         /* use flexbox instead of floats */
    }

    & > div {
      float: none;           /* stop using float and start using flexbox instead */
      display: flex;
    }

  }

  .flexbox &--equal-height-at-large {
    @mixin atLarge {
      display: flex;
    }

    & > div {
      float: none;           /* stop using float and start using flexbox instead */
      display: flex;
    }

  }

}

    